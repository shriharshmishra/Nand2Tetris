// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:

    Mux16(a=addout, b=in, sel=load, out=resetin);
    Mux16(a=false, b[0]=true, b[1..15]=false, sel=inc, out=addin2);
    Mux16(a=resetin, b=false, sel=reset, out=regin);
    Add16(a=addin1, b=addin2, out=addout);
    Or(a=load, b=inc, out=regloadp1);
    Or(a=regloadp1, b=reset, out=regload);
    Register(in=regin, load=regload, out=addin1, out=out);

//    Mux16(b=in, a=feedback, sel=load, out=adder1);
//    Mux16(b=false, a[0]=todff0, a[1]=todff1, a[2]=todff2,  a[3]=todff3,  a[4]=todff4,  a[5]=todff5,  a[6]=todff6,  a[7]=todff7,  a[8]=todff8,  a[9]=todff9,  a[10]=todff10,  a[11]=todff11,  a[12]=todff12,  a[13]=todff13,  a[14]=todff14,  a[15]=todff15, sel=reset, out=feedback);
//    Mux16(a=false, b[0]=true, b[1..15]=false, sel=inc, out=adder2);
//    Add16(a=adder1, b=adder2, out[0]=todff0, out[1]=todff1,  out[2]=todff2,  out[3]=todff3,  out[4]=todff4,  out[5]=todff5,  out[6]=todff6,  out[7]=todff7,  out[8]=todff8,  out[9]=todff9,  out[10]=todff10,  out[11]=todff11,  out[12]=todff12,  out[13]=todff13,  out[14]=todff14,  out[15]=todff15] );
//    DFF(in=todff0, out=out[0]);
//    DFF(in=todff1, out=out[1]);
//    DFF(in=todff2, out=out[2]);
//    DFF(in=todff3, out=out[3]);
//    DFF(in=todff4, out=out[4]);
//    DFF(in=todff5, out=out[5]);
//    DFF(in=todff6, out=out[6]);
//    DFF(in=todff7, out=out[7]);
//    DFF(in=todff8, out=out[8]);
//    DFF(in=todff9, out=out[9]);
//    DFF(in=todff10, out=out[10]);
//    DFF(in=todff11, out=out[11]);
//    DFF(in=todff12, out=out[12]);
//    DFF(in=todff13, out=out[13]);
//    DFF(in=todff14, out=out[14]);
//    DFF(in=todff15, out=out[15]);
}
