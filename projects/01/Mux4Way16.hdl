// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Put your code here:
    Not(in=sel[0], out=notsel0);
    Not(in=sel[1], out=notsel1);

    // Using Mux16
    Mux16(a=a, b=b, sel=sel[0], out=aorb);
    Mux16(a=c, b=d, sel=sel[0], out=cord);
    Mux16(a=aorb, b=cord, sel=sel[1], out=out);

    //Simple implementation using 16-bit And, Or
    //And16(a=notsel0, b=notsel1, out=sela);
    //And16(a=a, b=sela, out=inta);
    //And16(a=notsel0, b=sel[1], out=selb);
    //And16(a=b, b=selb, out=intb);
    //And16(a=sel[0], b=notsel1, out=selc);
    //And16(a=c, b=selc, out=intc);
    //And16(a=sel[0], b=sel[1], out=seld);
    //And16(a=d, b=seld, out=intd);

    //Or16(a=inta, b=intb, out=aorb);
    //Or16(a=intc, b=intd, out=cord);
    //Or16(a=aorb, b=cord, out=out);
}
